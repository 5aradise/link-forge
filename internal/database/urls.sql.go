// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: urls.sql

package database

import (
	"context"
)

const createURL = `-- name: CreateURL :one
INSERT INTO urls (alias, url)
VALUES (?, ?)
RETURNING id, alias, url
`

type CreateURLParams struct {
	Alias string
	Url   string
}

func (q *Queries) CreateURL(ctx context.Context, arg CreateURLParams) (Url, error) {
	row := q.db.QueryRowContext(ctx, createURL, arg.Alias, arg.Url)
	var i Url
	err := row.Scan(&i.ID, &i.Alias, &i.Url)
	return i, err
}

const listURLs = `-- name: ListURLs :many
SELECT id, alias, url FROM urls
ORDER BY id
`

func (q *Queries) ListURLs(ctx context.Context) ([]Url, error) {
	rows, err := q.db.QueryContext(ctx, listURLs)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Url
	for rows.Next() {
		var i Url
		if err := rows.Scan(&i.ID, &i.Alias, &i.Url); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
